#include<iostream>
#include<algorithm>
#include<vector>
#include<memory.h>

#define INF 99999
using namespace std;

int n, w;
int people[10001][2];
int dp[10010][3];

void solve(int a)
{
    for(int i = a; i<=n; i++)
    {
        dp[i+1][2]= min(dp[i][0]+1, dp[i][1]+1);
        if(people[i][0]+people[i][1]<=w)
            dp[i+1][2] =min(dp[i+1][2], dp[i][2]+1);
        if(i>0&&people[i-1][0]+people[i][0]<=w&&people[i-1][1]+people[i][1]<=w)
        {
            dp[i+1][2]= min(dp[i+1][2], dp[i-1][2]+2);    
        }
        if(i==n) continue;
        dp[i+1][0] = dp[i+1][2]+1;
        dp[i+1][1] = dp[i+1][2]+1;
        if(people[i][0]+people[i+1][0]<=w){
            dp[i+1][0]= min(dp[i+1][0], dp[i][1]+1);

        }
        if(people[i][1]+people[i+1][1]<=w)
        {
            dp[i+1][1] = min(dp[i+1][1], dp[i][0]+1);
        }
    }
}
void init()
{
    cin>>n>>w;
    memset(people, 0, sizeof(people));
    for(int i =1; i<=n; i++)
    {
        cin>>people[i][0];

    }
    for(int i =1; i<=n; i++) cin>>people[i][1];

}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int tc;
    cin>>tc;
    while(tc--)
    {
        init();
        int ans = INF;
        dp[1][2] =0;
        dp[1][0] =1; dp[1][1] = 1;
        solve(2);
        ans = min(ans, dp[n+1][2]);
        if(n>2){
            if(people[1][0]+people[n][0]<=w)
            {
                dp[2][2]= 1;
                dp[2][0] = 2;
                dp[2][1]= people[1][1]+people[2][1]<=w ? 1:2;
                solve(2);
                ans = min(ans, dp[n][1]+1);

            }
            if(people[1][1]+ people[n][1]<=w)
            {
                dp[2][2] = 1;
                dp[2][0]= people[1][0]+people[2][0]<=w? 1:2;
                dp[2][1]= 2;
                solve(2);
                ans = min(ans, dp[n][0]+1);
            }
            if(people[1][0]+people[n][0]<=w&&people[1][1]+people[n][1]<=w)
            {
                dp[2][2] =0;
                dp[2][0] =1;
                dp[2][1] =1;
                solve(2);
                ans = min(ans, dp[n][2]+2);
            }
        }
        cout<<ans<<'\n';
    }
    return 0;
}
